DirectSound 2.0 readme file


Changes since DirectX 1.0 final release
=======================================

We have made few changes to DirectSound since DirectX 1.0.  
We have not been lazy; instead we have been concentrating our
development effort on DirectSound 3.0, which will be released in
August 96.  The main feature will be 3D sound, but there will be
lots of other improvements (especially some perf gains) that you
will want to pick up before you ship your game for Christmas.

The main changes for DirectSound 2.0 are:

- Bug fixes.

- Improvements to the wave emulation code (used when no driver is
available) to support wave drivers which don't work correctly.

- Changes to our sound focus management.  These changes were made
for various reasons, but should not make any difference to most
games.  They were needed to support out-of-proc (exe server) COM
objects, and to support the requirements of ActiveX (our new high-level
media streaming architecture).

- DSBCAPS_STICKYFOCUS.  This flag can be specified in a CreateSoundBuffer
call to change the focus behaviour of the sound buffer.  It works like
this: suppose you are in focus, and both your normal buffers and your sticky
focus buffers are audible.  If you then switch to another DirectSound
app, all of your buffers will be silent.  Up to now, everything is the
same as before.  However, if you switch to a non-DirectSound app, only
your normal buffers wil be muted.  Your sticky focus buffers will
continue playing.  This is useful for non-game applications, such as
movie playback (ActiveMovie) where you might want to hear your movie
soundtrack even while typing in Word or Excel.

- DSBCAPS_GETCURRENTPOSITION2.  This flag indicates that the application
wants IDirectSoundBuffer::GetCurrentPosition to use the new behaviour of
the play cursor.  In DirectX 1 on emulated sound cards, the play cursor
was significantly ahead of the actual playing sound; it was right behind
the write cursor.  Now, if the DSBCAPS_GETCURRENTPOSITION2 flag is specified,
the application can get a much more accurate play position.  If this flag
is not specified, the old behaviour is preserved for compatibility.  Note
that this flag only affects emulated sound cards; if a DirectSound driver
is present, the play cursor is accurate for DirectX 1 and 2.

Note: we don't have cross-app mixing in DirectSound 2.0, but it will be
released as part of DirectSound 3.0.


DirectSound Driver Support
==========================

There have been no changes to the DirectSound drivers, or to the driver
interface.  The driver support is exactly the same for DirectSound 2.0 as
for DirectSound 1.0 retail release.

The final release contains DirectSound versions of all sound drivers
included in the Windows 95 product.  This includes the following:

- Sound Blaster:  8-bit cards, 16-bit cards, and the AWE32.
- ESS: 488, 688, 1488, 1688.
- MediaVision: PAS 16, PAS Studio, PAS Plus, Pro 3D, and Blue Lite Special.
- Aztech: Nova 16, Washington 16, Rocky 2.
- Microsoft: Windows Sound System.

Sound cards which do not have DirectSound drivers can still be accessed
through DirectSound.  If no driver is available, DirectSound will use its
emulation layer to communicate with the device through the standard Wave
driver interface.  This provides full DirectSound functionality, but
increases latency significantly and prevents access to hardware
acceleration.

We have also encountered faults in certain situations on the Roland
Rap 10 and the Gravis UltraSound MAX.
